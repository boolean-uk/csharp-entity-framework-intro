// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using exercise.webapi.Data;

#nullable disable

namespace exercise.webapi.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240202100217_manyToManyAuthorBooks")]
    partial class manyToManyAuthorBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("exercise.webapi.Models.Types.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.HasKey("Id");

                    b.ToTable("authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "oprah.winfrey@gov.us",
                            FirstName = "Oprah",
                            LastName = "Winfrey"
                        },
                        new
                        {
                            Id = 2,
                            Email = "audrey.hendrix@tesla.com",
                            FirstName = "Audrey",
                            LastName = "Hendrix"
                        },
                        new
                        {
                            Id = 3,
                            Email = "kate.hepburn@tesla.com",
                            FirstName = "Kate",
                            LastName = "Hepburn"
                        },
                        new
                        {
                            Id = 4,
                            Email = "donald.windsor@google.com",
                            FirstName = "Donald",
                            LastName = "Windsor"
                        },
                        new
                        {
                            Id = 5,
                            Email = "charles.hendrix@bbc.co.uk",
                            FirstName = "Charles",
                            LastName = "Hendrix"
                        },
                        new
                        {
                            Id = 6,
                            Email = "donald.jagger@something.com",
                            FirstName = "Donald",
                            LastName = "Jagger"
                        },
                        new
                        {
                            Id = 7,
                            Email = "charles.jagger@bbc.co.uk",
                            FirstName = "Charles",
                            LastName = "Jagger"
                        },
                        new
                        {
                            Id = 8,
                            Email = "oprah.winslet@gov.gr",
                            FirstName = "Oprah",
                            LastName = "Winslet"
                        },
                        new
                        {
                            Id = 9,
                            Email = "audrey.jagger@bbc.co.uk",
                            FirstName = "Audrey",
                            LastName = "Jagger"
                        });
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("integer")
                        .HasColumnName("ppk_author_id");

                    b.Property<int>("BookId")
                        .HasColumnType("integer")
                        .HasColumnName("ppk_book_id");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBooks");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            BookId = 1
                        });
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer")
                        .HasColumnName("fk_publisher_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PublisherId = 4,
                            Title = "Two Large Cars"
                        },
                        new
                        {
                            Id = 2,
                            PublisherId = 3,
                            Title = "Two Purple Leopards"
                        },
                        new
                        {
                            Id = 3,
                            PublisherId = 2,
                            Title = "Fifteen Purple Cars"
                        },
                        new
                        {
                            Id = 4,
                            PublisherId = 3,
                            Title = "A herd of Purple Planets"
                        },
                        new
                        {
                            Id = 5,
                            PublisherId = 1,
                            Title = "The Large Planets"
                        },
                        new
                        {
                            Id = 6,
                            PublisherId = 1,
                            Title = "Fifteen Green Buildings"
                        },
                        new
                        {
                            Id = 7,
                            PublisherId = 3,
                            Title = "An army of Bitter Planets"
                        },
                        new
                        {
                            Id = 8,
                            PublisherId = 3,
                            Title = "Fifteen Transparent Buildings"
                        },
                        new
                        {
                            Id = 9,
                            PublisherId = 3,
                            Title = "A herd of Microscopic Houses"
                        },
                        new
                        {
                            Id = 10,
                            PublisherId = 1,
                            Title = "A bunch of Purple Cars"
                        },
                        new
                        {
                            Id = 11,
                            PublisherId = 2,
                            Title = "Two Large Cars"
                        },
                        new
                        {
                            Id = 12,
                            PublisherId = 4,
                            Title = "An army of Orange Buildings"
                        },
                        new
                        {
                            Id = 13,
                            PublisherId = 4,
                            Title = "A herd of Green Planets"
                        },
                        new
                        {
                            Id = 14,
                            PublisherId = 4,
                            Title = "An army of Green Flowers"
                        },
                        new
                        {
                            Id = 15,
                            PublisherId = 1,
                            Title = "Fifteen Bitter Leopards"
                        },
                        new
                        {
                            Id = 16,
                            PublisherId = 2,
                            Title = "The Microscopic Flowers"
                        },
                        new
                        {
                            Id = 17,
                            PublisherId = 1,
                            Title = "Fifteen Purple Buildings"
                        },
                        new
                        {
                            Id = 18,
                            PublisherId = 2,
                            Title = "An army of Rose Smelling Buildings"
                        },
                        new
                        {
                            Id = 19,
                            PublisherId = 1,
                            Title = "An army of Bitter Leopards"
                        },
                        new
                        {
                            Id = 20,
                            PublisherId = 2,
                            Title = "An army of Purple Houses"
                        },
                        new
                        {
                            Id = 21,
                            PublisherId = 3,
                            Title = "A bunch of Orange Cars"
                        },
                        new
                        {
                            Id = 22,
                            PublisherId = 2,
                            Title = "Several Transparent Houses"
                        },
                        new
                        {
                            Id = 23,
                            PublisherId = 3,
                            Title = "An army of Microscopic Buildings"
                        },
                        new
                        {
                            Id = 24,
                            PublisherId = 2,
                            Title = "Fifteen Large Flowers"
                        });
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Merriam Webster"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Merriam Webster"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Penguin Collins"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Macmillan Library"
                        });
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.AuthorBook", b =>
                {
                    b.HasOne("exercise.webapi.Models.Types.Author", "Author")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("exercise.webapi.Models.Types.Book", "Book")
                        .WithMany("AuthorBooks")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Book");
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Book", b =>
                {
                    b.HasOne("exercise.webapi.Models.Types.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Author", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Book", b =>
                {
                    b.Navigation("AuthorBooks");
                });

            modelBuilder.Entity("exercise.webapi.Models.Types.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
